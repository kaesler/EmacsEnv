#!/home/johnh/BIN/perl5 -w

#
# notesinit
# Copyright (C) 1996 by John Heidemann
# $Id: notesinit,v 1.4 2000/05/05 20:59:00 johnh Exp $
#

sub usage {
    print STDERR <<END;
usage: $0

This program sets up notes mode for the first time.
It typically runs interactively.
END
    exit 1;
}

use strict;

&usage if ($#ARGV >= 0 && $ARGV[0] eq '-?');


use POSIX;
BEGIN { unshift(@INC, "/home/johnh/NOTES/BIN"); };
use NotesVars;
use strict;


sub query {
    my($lc) = 1;
    if ($_[0] eq '-nolc') {
	$lc = undef;
	shift @_;
    };
    my($query, $valid_regexp, $default) = @_;
    my($a);
    for (;;) {
        print $query;
        $a = <>;
	chomp $a;
	$a = lc($a) if ($lc);
        return $default if ($a eq '');
        return $a if ($a =~ /$valid_regexp/);
	print "I didn't understand your answer `$a'.\n";
    };
}

print <<END;
notesinit will set up notes-mode for the first time.

What is notes mode?  Texinfo documentation should be installed on your
system.  Documentation is also available on the web at
<http://www.isi.edu/~johnh/SOFTWARE/NOTES_MODE/>.  Everything you will
be asked here is discussed in greater detail in the documentation.

END

my($home_dir) = ((getpwuid($<))[7]);
my($def_choices, $def) = ('(Y/n)', 'y');
($def_choices, $def) = ('(y/N)', 'n') if (-f "$home_dir/.notesrc");
print "WARNING:  you already appear to have notes configured.\n\n"
    if (-f "$home_dir/.notesrc");

my($a) = query("Do you want to set up notes mode now $def_choices? ", '(y|n)', $def);
if ($a ne 'y') {
    print "\nnotesinit exited.\n\n";
    exit 1;
};

print <<END;

Notes are stored in two-level hierarchy of directories.
For example:
~/NOTES/199603/960329
               ^^^^^^-- a notes file (the date, in YYMMDD)
        ^^^^^^--------- one subdirectory per month (form: YYYYMM)
  ^^^^^---------------- the parent directory of everything

END
$::notes{dir} = query("-nolc", "What should the parent directory be (default: ~/NOTES)? ", '.', '~/NOTES');
# fix ~
$::notes{dir} =~ s@^~/@$home_dir/@;


my($now) = time;
my($today_pathname) = epoch_to_pathname($now);

print <<END;

notesinit can now set-up your environment for notes.
It will take the following steps:

0. set up your .notesrc
1. create $::notes{dir}
2. create a sample note for today ($today_pathname)
3. index the default note
4. set up a crontab entry to re-index notes at 4am every morning
    (0 4 * * * $::notes{bin_dir}/mkall
5. add code to your .emacs file to load notes-mode

END
($def_choices, $def) = ('(M/d/s)', 'm');
($def_choices, $def) = ('(m/D/s)', 'd') if (-f "$home_dir/.notesrc");
my($go) = query("Make these changes, describe the changes, or stop $def_choices? ", '[mds]', $def);
exit 1 if ($go eq 's');

sub commands {
    my($cmd) = @_;
    if ($go eq 'm') {
	system($cmd);
    } else {
	print "$cmd\n";
    };
}

print "\n### changes begin here\n";
print "\n### 0. set up your .notesrc\n";
commands("cat >.notesrc <<END
dir: $::notes{dir}
END
");

# yuck: the || on the commands is to handle old systems without mkdir -p
print "\n### 1. creating $::notes{dir}\n";
commands("mkdir -p $::notes{dir} || mkdir $::notes{dir};\nchmod 0700  $::notes{dir}\n");

my($heading) = strftime_epoch("%d-%b-%y %A", $now);
my($underline) = "-" x length($heading);
print "\n### 2. create a sample note for today ($today_pathname)\n";
commands("mkdir `dirname $today_pathname`;\n cat >$today_pathname <<END

$heading
$underline

* Today
-------

to do list goes here?


* Environment/notes
-------------------

Set up notes with notesinit.

END
");

print "\n### 3. index the default note\n";
commands($::notes{bin_dir} . "/mkall");

print "\n### 4. set up a crontab entry to re-index notes at 4am every morning\n";
commands("crontab -l >/tmp/$$;
echo '0 4 * * * " . $::notes{bin_dir} . "/mkall' >>/tmp/$$;
" . $::notes{bin_dir} . "/setcrontab /tmp/$$
rm -f /tmp/$$");

print "\n### 5. add code to your .emacs file to load notes-mode\n";
commands("echo \"(require 'notes-variables)\" | cat >>$home_dir/.emacs");

print "\n### changes end here\n";

print "\nYou have elected to have the changes DESCRIBED but not made.\n" .
	"To make the changes yourself, run the commands between\n" .
	"\"changes begin here\" and \"changes end here\".\n";

exit 0;
